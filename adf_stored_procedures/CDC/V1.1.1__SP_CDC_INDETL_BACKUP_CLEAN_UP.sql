USE SCHEMA TRANSFORM;

CREATE OR REPLACE PROCEDURE "SP_CDC_INDETL_BACKUP_CLEAN_UP"("TABLE_NAME" VARCHAR(16777216), "STARTMNTDATE" VARCHAR(16777216), "ENDMNTDATE" VARCHAR(16777216), "DL_FILE_NAME" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE JAVASCRIPT
EXECUTE AS OWNER
AS '

snowflake.execute ({sqlText:`TRUNCATE TABLE STAGING.INDETL_DATA_FIX_STG;`})
  snowflake.execute ({sqlText:`COPY INTO STAGING.INDETL_DATA_FIX_STG FROM (
SELECT
    $1:INPNT,
	$1:INCUS,
	$1:INGRP,
	$1:INLOT,
	$1:INLTX,
	$1:INCOM,
	$1:INPRD,
	$1:INBCD,
	$1:INHWR,
	$1:INHSW,
	$1:INHWS,
	$1:INSRT,
	$1:INHWH,
	$1:INHRT,
	$1:INHRR,
	$1:INRRT,
	$1:INTIS,
	$1:INRSV,
	$1:INHLD,
	$1:INBTO,
	$1:INCEN,
	$1:INDTE,
	$1:INPFX,
	$1:INPSQ,
	$1:INCDT,
	$1:INTWT,
	$1:INREC,
	$1:INRCE,
	$1:INRDT,
	$1:INTMP,
	$1:INOBT,
	$1:INPFA,
	$1:INBPF,
	$1:INORG,
	$1:INONH,
	$1:INONO,
	$1:INOPN,
	$1:INNWT,
	$1:INTAR,
	$1:INCUB,
	$1:INUWT,
	$1:INVER,
	$1:INSTS,
	$1:INTIME,
	$1:INMDTE,
	$1:INMPGM,
	$1:SOURCEDBMS,
	$1:DTL__CAPXRESTART1,
	$1:DTL__CAPXRESTART2,
	$1:DTL__CAPXUOW,
	$1:DTL__CAPXUSER,
	$1:DTL__CAPXTIMESTAMP,
	$1:DTL__CAPXACTION,
	$1:DTL__CAPXCASDELIND,
	$1:DTL__CAPXRRN,
	$1:CDC_INS_DT,
	$1:CDC_UPD_DT,
	$1:CDC_INS_USR,
	$1:CDC_UPD_USR,
	$1:DL_INS_DT,
	$1:DL_INS_USR,
	convert_timezone(''America/Los_Angeles'', ''America/New_York'', current_timestamp::timestamp_ntz),
	NULL,
	''ADF_USER'',
	NULL,
	''WMS''
   FROM @STAGING.sf_dl_wms_parquet_stage/INDETL/INDETL_Backup_Q_MissingData.snappy.parquet)
`})
  
snowflake.execute ({sqlText:`MERGE INTO TRANSFORM.FACT_INVENTORY_DETAILS_QUARANTINE TGT
USING
(
select tgt.* from TRANSFORM.FACT_INVENTORY_DETAILS tgt
left join STAGING.INDETL_DATA_FIX_STG stg
on  TGT.PLANT_ID = STG.INPNT
AND TGT.CUSTOMER_ID = STG.INCUS
AND TGT.LOT_ID = STG.INLOT
AND TGT.LOT_EXTENDED_ID = STG.INLTX
AND TGT.RECEIPT_ID = STG.INREC
AND TGT.SOURCEDBMS = STG.SOURCEDBMS
--AND TGT.LAST_MAINTENANCE_DATE = STG.INMDTE
  WHERE STG.INPNT IS NULL AND TGT.LAST_MAINTENANCE_DATE BETWEEN 220721 AND 220722
) STG
ON
    TGT.PLANT_ID = STG.PLANT_ID
AND TGT.CUSTOMER_ID = STG.CUSTOMER_ID
AND TGT.LOT_ID = STG.LOT_ID
AND TGT.LOT_EXTENDED_ID = STG.LOT_EXTENDED_ID
AND TGT.RECEIPT_ID = STG.RECEIPT_ID
AND TGT.SOURCEDBMS = STG.SOURCEDBMS

WHEN NOT MATCHED THEN
INSERT
(
	TGT.PLANT_ID,
	TGT.CUSTOMER_ID,
	TGT.GROUP_ID,
	TGT.LOT_ID,
	TGT.LOT_EXTENDED_ID,
	TGT.COMMODITY_ID,
	TGT.PRODUCT_ID,
	TGT.BRAND_ID,
	TGT.RECEIVED_METHOD_ID,
	TGT.WAREHOUSE_STORED_METHOD_ID,
	TGT.STORED_METHOD_ID,
	TGT.STORAGE_COST_RATE,
	TGT.HANDLED_METHOD_ID,
	TGT.HANDLING_COST_RATE,
	TGT.RECURRING_COST_METHOD_ID,
	TGT.RECURRING_COST_RATE,
	TGT.TRANSFER_FLAG,
	TGT.RESERVED_QUANTITY,
	TGT.HOLD_CODE,
	TGT.BILL_TO_ID,
	TGT.EXPIRATION_CENTURY,
	TGT.EXPIRATION_DATE_NUMERIC,
	TGT.EXPIRATION_DATE,
	TGT.PULL_SEQUENCE_ID,
	TGT.PULL_SEQUENCE,
	TGT.CODE_DATE,
	TGT.TAKE_WEIGHT_FLAG,
	TGT.RECEIPT_ID,
	TGT.RECEIVED_CENTURY,
	TGT.RECEIVED_DATE_NUMERIC,
	TGT.RECEIVED_DATE,
	TGT.RECEIVED_TEMPERATURE,
	TGT.EXIT_BLAST_FREEZE_TEMPERATURE,
	TGT.PALLET_FACTOR,
	TGT.BILLING_PALLET_FACTOR,
	TGT.QUANTITY_ORIGINALLY_RECEIVED,
	TGT.QUANTITY_ON_HAND,
	TGT.QUANTITY_ON_ORDER,
	TGT.OPEN_INVENTORY_FLAG,
	TGT.NET_WEIGHT,
	TGT.TARE,
	TGT.CUBE,
	TGT.UNIT_WEIGHT,
	TGT.VERSION_NUMBER,
	TGT.STATUS_FLAG,
	TGT.LAST_MAINTENANCE_TIME,
	TGT.LAST_MAINTENANCE_DATE,
	TGT.LAST_MAINTENANCE_DATETIME,
	TGT.LAST_MAINTENANCE_PROGRAM,
	TGT.SOURCEDBMS,
	TGT.SOURCE_SYSTEM,
	TGT.CDC_INS_DT,
	TGT.CDC_INS_USR,
	TGT.CDC_UPD_DT,
	TGT.CDC_UPD_USR,
	TGT.DL_INS_DT,
	TGT.DL_INS_USR,
	TGT.CDW_INS_DT,
	TGT.CDW_INS_USR,
	TGT.CDW_UPD_DT,
	TGT.CDW_UPD_USR,
	TGT.QUARANTINE_DATE
)
VALUES
(
	STG.PLANT_ID,
	STG.CUSTOMER_ID,
	STG.GROUP_ID,
	STG.LOT_ID,
	STG.LOT_EXTENDED_ID,
	STG.COMMODITY_ID,
	STG.PRODUCT_ID,
	STG.BRAND_ID,
	STG.RECEIVED_METHOD_ID,
	STG.WAREHOUSE_STORED_METHOD_ID,
	STG.STORED_METHOD_ID,
	STG.STORAGE_COST_RATE,
	STG.HANDLED_METHOD_ID,
	STG.HANDLING_COST_RATE,
	STG.RECURRING_COST_METHOD_ID,
	STG.RECURRING_COST_RATE,
	STG.TRANSFER_FLAG,
	STG.RESERVED_QUANTITY,
	STG.HOLD_CODE,
	STG.BILL_TO_ID,
	STG.EXPIRATION_CENTURY,
	STG.EXPIRATION_DATE_NUMERIC,
	STG.EXPIRATION_DATE,
	STG.PULL_SEQUENCE_ID,
	STG.PULL_SEQUENCE,
	STG.CODE_DATE,
	STG.TAKE_WEIGHT_FLAG,
	STG.RECEIPT_ID,
	STG.RECEIVED_CENTURY,
	STG.RECEIVED_DATE_NUMERIC,
	STG.RECEIVED_DATE,
	STG.RECEIVED_TEMPERATURE,
	STG.EXIT_BLAST_FREEZE_TEMPERATURE,
	STG.PALLET_FACTOR,
	STG.BILLING_PALLET_FACTOR,
	STG.QUANTITY_ORIGINALLY_RECEIVED,
	STG.QUANTITY_ON_HAND,
	STG.QUANTITY_ON_ORDER,
	STG.OPEN_INVENTORY_FLAG,
	STG.NET_WEIGHT,
	STG.TARE,
	STG.CUBE,
	STG.UNIT_WEIGHT,
	STG.VERSION_NUMBER,
	STG.STATUS_FLAG,
	STG.LAST_MAINTENANCE_TIME,
	STG.LAST_MAINTENANCE_DATE,
	STG.LAST_MAINTENANCE_DATETIME,
	STG.LAST_MAINTENANCE_PROGRAM,
	STG.SOURCEDBMS,
	STG.SOURCE_SYSTEM,
	STG.CDC_INS_DT,
	STG.CDC_INS_USR,
	STG.CDC_UPD_DT,
	STG.CDC_UPD_USR,
	STG.DL_INS_DT,
	STG.DL_INS_USR,
	STG.CDW_INS_DT,
	STG.CDW_INS_USR,
	STG.CDW_UPD_DT,
	STG.CDW_UPD_USR,
  	DATE(CONVERT_TIMEZONE(''America/Los_Angeles'', ''America/New_York'', CURRENT_TIMESTAMP::TIMESTAMP_NTZ))
  );
  `})
  
  snowflake.execute ({sqlText:`Delete from TRANSFORM.FACT_INVENTORY_DETAILS tgt
USING
(SELECT * FROM TRANSFORM.FACT_INVENTORY_DETAILS_QUARANTINE  
 WHERE  QUARANTINE_DATE  =  DATE(CONVERT_TIMEZONE(''America/Los_Angeles'', ''America/New_York'', CURRENT_TIMESTAMP::TIMESTAMP_NTZ))
) Qtgt
WHERE
    TGT.PLANT_ID = Qtgt.PLANT_ID
AND TGT.CUSTOMER_ID = Qtgt.CUSTOMER_ID
AND TGT.LOT_ID = Qtgt.LOT_ID
AND TGT.LOT_EXTENDED_ID = Qtgt.LOT_EXTENDED_ID
AND TGT.RECEIPT_ID = Qtgt.RECEIPT_ID
AND TGT.SOURCEDBMS = Qtgt.SOURCEDBMS
AND TGT.LAST_MAINTENANCE_DATE = Qtgt.LAST_MAINTENANCE_DATE
  `})
  
snowflake.execute ({sqlText:`MERGE INTO TRANSFORM.FACT_INVENTORY_DETAILS TGT
USING
(
  SELECT * FROM
(SELECT
	A.INPNT,
	A.INCUS,
	A.INGRP,
	A.INLOT,
	A.INLTX,
	A.INCOM,
	A.INPRD,
	A.INBCD,
	A.INHWR,
	A.INHSW,
	A.INHWS,
	A.INSRT,
	A.INHWH,
	A.INHRT,
	A.INHRR,
	A.INRRT,
	A.INTIS,
	A.INRSV,
	A.INHLD,
	A.INBTO,
	A.INCEN,
	A.INDTE,
	TRY_TO_DATE(A.INCEN||SUBSTRING(LPAD(A.INDTE,6,0),1,2)||''-''||SUBSTRING(LPAD(A.INDTE,6,0),3,2)||''-''||SUBSTRING(LPAD(A.INDTE,6,0),5,2)) AS EXPIRATION_DATE,
	A.INPFX,
	A.INPSQ,
	A.INCDT,
	A.INTWT,
	A.INREC,
	A.INRCE,
	A.INRDT,
	TRY_TO_DATE(A.INRCE||SUBSTRING(LPAD(A.INRDT,6,0),1,2)||''-''||SUBSTRING(LPAD(A.INRDT,6,0),3,2)||''-''||SUBSTRING(LPAD(A.INRDT,6,0),5,2)) AS RECEIVED_DATE, 
	A.INTMP,
	A.INOBT,
	A.INPFA,
	A.INBPF,
	A.INORG,
	A.INONH,
	A.INONO,
	A.INOPN,
	A.INNWT,
	A.INTAR,
	A.INCUB,
	A.INUWT,
	A.INVER,
	A.INSTS,
	A.INTIME,
	A.INMDTE,
	TRY_TO_TIMESTAMP(''20''||SUBSTRING(LPAD(A.INMDTE,6,0),1,2)||''-''||SUBSTRING(LPAD(A.INMDTE,6,0),3,2)||''-''||SUBSTRING(LPAD(A.INMDTE,6,0),5,2)
	||'' ''||SUBSTRING(LPAD(A.INTIME,6,0),1,2)||'':''||SUBSTRING(LPAD(A.INTIME,6,0),3,2)||'':''||SUBSTRING(LPAD(A.INTIME,6,0),5,2)) AS LAST_MAINTENANCE_DATETIME,
	A.INMPGM,
	A.SOURCEDBMS,
	A.SOURCE_SYSTEM,
	A.CDC_INS_DT,
	A.CDC_INS_USR,
	A.CDC_UPD_DT,
	A.CDC_UPD_USR,
	A.DL_INS_DT,
	A.DL_INS_USR,
	ROW_NUMBER() OVER (PARTITION BY A.INPNT,A.INCUS,A.INLOT,A.INLTX,A.INREC,A.SOURCEDBMS ORDER BY INMDTE DESC,INTIME DESC) AS RN
FROM
	STAGING.INDETL_DATA_FIX_STG A) S
WHERE S.RN = 1
AND TO_DATE(LAST_MAINTENANCE_DATETIME) < TO_DATE(CONVERT_TIMEZONE(''America/Los_Angeles'', ''America/New_York'', CURRENT_TIMESTAMP::TIMESTAMP_NTZ))
ORDER BY S.SOURCEDBMS,S.INPNT,S.INCUS,S.INLOT,S.INLTX,S.INREC
) STG
ON
	TGT.PLANT_ID = STG.INPNT
AND TGT.CUSTOMER_ID = STG.INCUS
AND TGT.LOT_ID = STG.INLOT
AND TGT.LOT_EXTENDED_ID = STG.INLTX
AND TGT.RECEIPT_ID = STG.INREC
AND TGT.SOURCEDBMS = STG.SOURCEDBMS
--WHEN MATCHED AND STG.LAST_MAINTENANCE_DATETIME > TGT.LAST_MAINTENANCE_DATETIME THEN
WHEN MATCHED THEN
UPDATE
SET
	TGT.PLANT_ID						= 	STG.INPNT,
	TGT.CUSTOMER_ID                     =	STG.INCUS,
	TGT.GROUP_ID                        =	STG.INGRP,	
	TGT.LOT_ID                          =	STG.INLOT,
	TGT.LOT_EXTENDED_ID                 =	STG.INLTX,
	TGT.COMMODITY_ID                    =	STG.INCOM,
	TGT.PRODUCT_ID                      =	STG.INPRD,
	TGT.BRAND_ID                        =	STG.INBCD,
	TGT.RECEIVED_METHOD_ID              =	STG.INHWR,
	TGT.WAREHOUSE_STORED_METHOD_ID      =	STG.INHSW,
	TGT.STORED_METHOD_ID                =	STG.INHWS,
	TGT.STORAGE_COST_RATE               =	STG.INSRT,
	TGT.HANDLED_METHOD_ID               =	STG.INHWH,
	TGT.HANDLING_COST_RATE              =	STG.INHRT,
	TGT.RECURRING_COST_METHOD_ID        =	STG.INHRR,
	TGT.RECURRING_COST_RATE             =	STG.INRRT,
	TGT.TRANSFER_FLAG                   =	STG.INTIS,
	TGT.RESERVED_QUANTITY               =	STG.INRSV,
	TGT.HOLD_CODE                       =	STG.INHLD,
	TGT.BILL_TO_ID                      =	STG.INBTO,
	TGT.EXPIRATION_CENTURY              =	STG.INCEN,
	TGT.EXPIRATION_DATE_NUMERIC         =	STG.INDTE,
	TGT.EXPIRATION_DATE                 =	STG.EXPIRATION_DATE,
	TGT.PULL_SEQUENCE_ID                =	STG.INPFX,
	TGT.PULL_SEQUENCE                   =	STG.INPSQ,
	TGT.CODE_DATE                       =	STG.INCDT,
	TGT.TAKE_WEIGHT_FLAG                =	STG.INTWT,
	TGT.RECEIPT_ID                      =	STG.INREC,
	TGT.RECEIVED_CENTURY                =	STG.INRCE,
	TGT.RECEIVED_DATE_NUMERIC           =	STG.INRDT,
	TGT.RECEIVED_DATE                   =	STG.RECEIVED_DATE,
	TGT.RECEIVED_TEMPERATURE            =	STG.INTMP,
	TGT.EXIT_BLAST_FREEZE_TEMPERATURE   =	STG.INOBT,
	TGT.PALLET_FACTOR                   =	STG.INPFA,
	TGT.BILLING_PALLET_FACTOR           =	STG.INBPF,
	TGT.QUANTITY_ORIGINALLY_RECEIVED    =	STG.INORG,
	TGT.QUANTITY_ON_HAND                =	STG.INONH,
	TGT.QUANTITY_ON_ORDER               =	STG.INONO,
	TGT.OPEN_INVENTORY_FLAG             =	STG.INOPN,
	TGT.NET_WEIGHT                      =	STG.INNWT,
	TGT.TARE                            =	STG.INTAR,
	TGT.CUBE                            =	STG.INCUB,
	TGT.UNIT_WEIGHT                     =	STG.INUWT,
	TGT.VERSION_NUMBER                  =	STG.INVER,
	TGT.STATUS_FLAG                     =	STG.INSTS,
	TGT.LAST_MAINTENANCE_TIME           =	STG.INTIME,
	TGT.LAST_MAINTENANCE_DATE           =	STG.INMDTE,
	TGT.LAST_MAINTENANCE_DATETIME       =	STG.LAST_MAINTENANCE_DATETIME,
	TGT.LAST_MAINTENANCE_PROGRAM        =	STG.INMPGM,
	TGT.SOURCEDBMS                      =	STG.SOURCEDBMS,
	TGT.SOURCE_SYSTEM                   =	STG.SOURCE_SYSTEM,
	TGT.CDC_INS_DT                      =	STG.CDC_INS_DT,
	TGT.CDC_INS_USR                     =	STG.CDC_INS_USR,
	TGT.CDC_UPD_DT                      =	STG.CDC_UPD_DT,
	TGT.CDC_UPD_USR                     =	STG.CDC_UPD_USR,
	TGT.DL_INS_DT                       =	STG.DL_INS_DT,
	TGT.DL_INS_USR                      =	STG.DL_INS_USR,
	TGT.CDW_UPD_DT                      =	CONVERT_TIMEZONE(''America/Los_Angeles'', ''America/New_York'', CURRENT_TIMESTAMP::TIMESTAMP_NTZ),
	TGT.CDW_UPD_USR                     =	''ADF_FIX''
WHEN NOT MATCHED THEN
INSERT
(
	PLANT_ID,
	CUSTOMER_ID,
	GROUP_ID,
	LOT_ID,
	LOT_EXTENDED_ID,
	COMMODITY_ID,
	PRODUCT_ID,
	BRAND_ID,
	RECEIVED_METHOD_ID,
	WAREHOUSE_STORED_METHOD_ID,
	STORED_METHOD_ID,
	STORAGE_COST_RATE,
	HANDLED_METHOD_ID,
	HANDLING_COST_RATE,
	RECURRING_COST_METHOD_ID,
	RECURRING_COST_RATE,
	TRANSFER_FLAG,
	RESERVED_QUANTITY,
	HOLD_CODE,
	BILL_TO_ID,
	EXPIRATION_CENTURY,
	EXPIRATION_DATE_NUMERIC,
	EXPIRATION_DATE,
	PULL_SEQUENCE_ID,
	PULL_SEQUENCE,
	CODE_DATE,
	TAKE_WEIGHT_FLAG,
	RECEIPT_ID,
	RECEIVED_CENTURY,
	RECEIVED_DATE_NUMERIC,
	RECEIVED_DATE,
	RECEIVED_TEMPERATURE,
	EXIT_BLAST_FREEZE_TEMPERATURE,
	PALLET_FACTOR,
	BILLING_PALLET_FACTOR,
	QUANTITY_ORIGINALLY_RECEIVED,
	QUANTITY_ON_HAND,
	QUANTITY_ON_ORDER,
	OPEN_INVENTORY_FLAG,
	NET_WEIGHT,
	TARE,
	CUBE,
	UNIT_WEIGHT,
	VERSION_NUMBER,
	STATUS_FLAG,
	LAST_MAINTENANCE_TIME,
	LAST_MAINTENANCE_DATE,
	LAST_MAINTENANCE_DATETIME,
	LAST_MAINTENANCE_PROGRAM,
	SOURCEDBMS,
	SOURCE_SYSTEM,
	CDC_INS_DT,
	CDC_INS_USR,
	CDC_UPD_DT,
	CDC_UPD_USR,
	DL_INS_DT,
	DL_INS_USR,
	CDW_INS_DT,
	CDW_INS_USR,
	CDW_UPD_DT,
	CDW_UPD_USR
)
VALUES
(
	STG.INPNT,
	STG.INCUS,
	STG.INGRP,
	STG.INLOT,
	STG.INLTX,
	STG.INCOM,
	STG.INPRD,
	STG.INBCD,
	STG.INHWR,
	STG.INHSW,
	STG.INHWS,
	STG.INSRT,
	STG.INHWH,
	STG.INHRT,
	STG.INHRR,
	STG.INRRT,
	STG.INTIS,
	STG.INRSV,
	STG.INHLD,
	STG.INBTO,
	STG.INCEN,
	STG.INDTE,
	STG.EXPIRATION_DATE,
	STG.INPFX,
	STG.INPSQ,
	STG.INCDT,
	STG.INTWT,
	STG.INREC,
	STG.INRCE,
	STG.INRDT,
	STG.RECEIVED_DATE,
	STG.INTMP,
	STG.INOBT,
	STG.INPFA,
	STG.INBPF,
	STG.INORG,
	STG.INONH,
	STG.INONO,
	STG.INOPN,
	STG.INNWT,
	STG.INTAR,
	STG.INCUB,
	STG.INUWT,
	STG.INVER,
	STG.INSTS,
	STG.INTIME,
	STG.INMDTE,
	STG.LAST_MAINTENANCE_DATETIME,
	STG.INMPGM,
	STG.SOURCEDBMS,
	STG.SOURCE_SYSTEM,
	STG.CDC_INS_DT,
	STG.CDC_INS_USR,
	STG.CDC_UPD_DT,
	STG.CDC_UPD_USR,
	STG.DL_INS_DT,
	STG.DL_INS_USR,
	CONVERT_TIMEZONE(''America/Los_Angeles'', ''America/New_York'', CURRENT_TIMESTAMP::TIMESTAMP_NTZ),
	''ADF_FIX'',
	NULL,	
	NULL
);
  `})
return ''done'';

';
