delete from TRANSFORM.PRFT_EMPLOYEE_TOTAL_HOURS_EWM
where year=RUN_YEAR and month=RUN_MONTH;

insert into TRANSFORM.PRFT_EMPLOYEE_TOTAL_HOURS_EWM
WITH EMPLOYEE_BREAK_TASK_HOURS AS (
select 
WHSE.ACCOUNT_NUMBER AS PLANT_ID,
USR.LOGIN_USER_NAME AS USER,
TH.TASK_NUMBER_SYSID AS TASK_NUMBER_SYSID, 
TH.TASK_NUMBER AS TASK_NUMBER,
extract(MONTH FROM TH.TASK_LOCK_TIMESTAMP) month,
extract(YEAR FROM TH.TASK_LOCK_TIMESTAMP) YEAR,
  TT_DTL.DETAIL_CODE,
  TH.TASK_LOCK_TIMESTAMP LOCK_DATETIME,
  TH.TASK_COMPLETION_TIMESTAMP SCANNED_DATETIME,
sum(datediff(minutes,LOCK_DATETIME, SCANNED_DATETIME))/60 br_total_time_user
FROM TRANSFORM.EWM_FACT_TASK_HEADER TH
LEFT JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE WHSE 
ON WHSE.ACCOUNT_SYSID = TH.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_USER_MASTER USR
ON TH.USERID = USR.USERID 
LEFT JOIN TRANSFORM.EWM_FACT_MISC_TASK_DETAIL MCT_DTL ON TH.TASK_NUMBER_SYSID = MCT_DTL.TASK_NUMBER_SYSID AND TH.WAREHOUSE_SYSID = MCT_DTL.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_DETAIL_CODE TT_DTL 
ON TH.TASK_TYPE_SYSID = TT_DTL.DETAIL_CODE_SYSID 
LEFT JOIN TRANSFORM.EWM_DIM_DETAIL_CODE TS_DTL 
ON TH.TASK_STATUS_SYSID = TS_DTL.DETAIL_CODE_SYSID 
INNER JOIN TRANSFORM.REF_EWM_GOLIVE R
   ON WHSE.ACCOUNT_NUMBER = R.PLANT_ID
WHERE 
  month(th.task_lock_timestamp) = RUN_MONTH
  and year(th.task_lock_timestamp) = RUN_YEAR
AND TT_DTL.DETAIL_CODE in ('BR', 'LU')
AND datediff(minutes, LOCK_DATETIME, SCANNED_DATETIME)/60 between 0 and 24
AND to_date(TH.TASK_LOCK_TIMESTAMP) > R.EWM_GO_LIVE_DATE
AND trim(usr.login_user_name) not in ('AUTOLOC', 'System')
GROUP BY WHSE.ACCOUNT_NUMBER,
   USR.LOGIN_USER_NAME,
TH.TASK_NUMBER_SYSID,
TH.TASK_NUMBER,
TH.TASK_COMPLETION_TIMESTAMP,
TH.TASK_LOCK_TIMESTAMP,
 TT_DTL.DETAIL_CODE
),
TOTAL_EMPLOYEE_TASK_HOURS AS (
select 
WHSE.ACCOUNT_NUMBER AS PLANT_ID,
  USR.LOGIN_USER_NAME AS USER,
TH.TASK_NUMBER_SYSID AS TASK_NUMBER_SYSID, 
TH.TASK_NUMBER AS TASK_NUMBER,
   TT_DTL.DETAIL_CODE,
  TT_DTL.MASTER_CODE_SYSID,
extract(MONTH FROM TH.TASK_LOCK_TIMESTAMP) month,
extract(YEAR FROM TH.TASK_LOCK_TIMESTAMP) YEAR,
CASE WHEN TT_DTL.DETAIL_CODE IN ( 'BP', 'BK', 'OP', 'PL' ) AND PT_DTL.PICK_SCANNED_TIMESTAMP IS NOT NULL THEN PT_DTL.PICK_SCANNED_TIMESTAMP ELSE TH.TASK_LOCK_TIMESTAMP END AS LOCK_DATETIME,
CASE WHEN TT_DTL.DETAIL_CODE IN ( 'BP', 'BK', 'OP', 'PL' ) AND PT_DTL.PICK_COMPLETION_TIMESTAMP IS NOT NULL THEN PT_DTL.PICK_COMPLETION_TIMESTAMP ELSE TH.TASK_COMPLETION_TIMESTAMP END AS SCANNED_DATETIME,
  sum(datediff(minutes,LOCK_DATETIME, SCANNED_DATETIME))/60 total_hours_emp
FROM TRANSFORM.EWM_FACT_TASK_HEADER TH
INNER JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE WHSE 
ON WHSE.ACCOUNT_SYSID = TH.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_USER_MASTER USR
ON TH.USERID = USR.USERID 
LEFT JOIN (SELECT REFERENCE_SYSID FROM TRANSFORM.EWM_DIM_REFERENCE_TABLE WHERE REFERENCE_CODE='TEMP' AND REFERENCE_TYPE_DESCRIPTION='User Type Code') USR_TYPE ON USR.USER_TYPE_SYSID=USR_TYPE.REFERENCE_SYSID
LEFT JOIN TRANSFORM.EWM_FACT_PICK_TASK_DETAIL PT_DTL
ON TH.TASK_NUMBER_SYSID = PT_DTL.TASK_NUMBER_SYSID
AND TH.WAREHOUSE_SYSID = PT_DTL.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_FACT_INVENTORY_PALLET_DETAIL IP
ON IP.INVENTORY_PALLET_DETAIL_SYSID = PT_DTL.INVENTARY_PALLET_DETAIL_SYSID
AND IP.WAREHOUSE_SYSID = PT_DTL.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE CT
ON IP.CUSTOMER_SYSID = CT.ACCOUNT_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_DETAIL_CODE TT_DTL 
ON TH.TASK_TYPE_SYSID = TT_DTL.DETAIL_CODE_SYSID 
INNER JOIN TRANSFORM.REF_EWM_GOLIVE R
  ON WHSE.ACCOUNT_NUMBER = R.PLANT_ID
WHERE 
  month(th.task_lock_timestamp) = RUN_MONTH
  and year(th.task_lock_timestamp) = RUN_YEAR
  AND to_date(TH.TASK_LOCK_TIMESTAMP) > R.EWM_GO_LIVE_DATE
  AND TT_DTL.MASTER_CODE_SYSID = 198
AND (TT_DTL.MASTER_CODE_SYSID = 198 AND TT_DTL.DETAIL_CODE IN ( 'BP', 'BK', 'PL' )
  or (TT_DTL.DETAIL_CODE in ('OP') and TT_DTL.MASTER_CODE_SYSID = 155))
AND datediff(minutes, LOCK_DATETIME, SCANNED_DATETIME)/60 between 0 and 24
AND trim(usr.login_user_name) not in ('AUTOLOC', 'System')
GROUP BY WHSE.ACCOUNT_NUMBER,
USR.LOGIN_USER_NAME,
TH.TASK_NUMBER_SYSID,
TH.TASK_NUMBER,
TH.TASK_COMPLETION_TIMESTAMP,
TH.TASK_LOCK_TIMESTAMP,
PT_DTL.PICK_SCANNED_TIMESTAMP,
PT_DTL.PICK_COMPLETION_TIMESTAMP,
TT_DTL.DETAIL_CODE,
TT_DTL.MASTER_CODE_SYSID
union
select
WHSE.ACCOUNT_NUMBER AS PLANT_ID,
USR.LOGIN_USER_NAME AS USER,
TH.TASK_NUMBER_SYSID AS TASK_NUMBER_SYSID,
TH.TASK_NUMBER AS TASK_NUMBER,
TT_DTL.DETAIL_CODE,
TT_DTL.MASTER_CODE_SYSID,
extract(MONTH FROM TH.TASK_LOCK_TIMESTAMP) month,
extract(YEAR FROM TH.TASK_LOCK_TIMESTAMP) YEAR,
CASE WHEN TT_DTL.DETAIL_CODE IN ( 'PW' ) AND pw.SCANNED_TS IS NOT NULL THEN pw.SCANNED_TS ELSE TH.TASK_LOCK_TIMESTAMP END AS LOCK_DATETIME,
CASE WHEN TT_DTL.DETAIL_CODE IN ( 'PW' ) AND pw.TASK_COMPLETION_TIMESTAMP IS NOT NULL THEN pw.TASK_COMPLETION_TIMESTAMP ELSE TH.TASK_COMPLETION_TIMESTAMP END AS SCANNED_DATETIME,
sum(datediff(minutes,LOCK_DATETIME, SCANNED_DATETIME))/60 total_hours_emp
FROM TRANSFORM.EWM_FACT_TASK_HEADER TH
INNER JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE WHSE
ON WHSE.ACCOUNT_SYSID = TH.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_USER_MASTER USR
ON TH.USERID = USR.USERID
LEFT JOIN (SELECT REFERENCE_SYSID FROM TRANSFORM.EWM_DIM_REFERENCE_TABLE WHERE REFERENCE_CODE='TEMP' AND REFERENCE_TYPE_DESCRIPTION='User Type Code') USR_TYPE ON USR.USER_TYPE_SYSID=USR_TYPE.REFERENCE_SYSID
LEFT JOIN TRANSFORM.EWM_FACT_PUTAWAY_RUNNING_TASK_DETAIL PW
ON TH.TASK_NUMBER_SYSID = pw.TASK_NUMBER_SYSID
AND TH.WAREHOUSE_SYSID = pw.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE CT
ON pw.CUSTOMER_SYSID = CT.ACCOUNT_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_DETAIL_CODE TT_DTL
ON TH.TASK_TYPE_SYSID = TT_DTL.DETAIL_CODE_SYSID
INNER JOIN TRANSFORM.REF_EWM_GOLIVE R
ON WHSE.ACCOUNT_NUMBER = R.PLANT_ID
WHERE month(TH.TASK_LOCK_TIMESTAMP) = RUN_MONTH
and year(TH.TASK_LOCK_TIMESTAMP) = RUN_YEAR
AND to_date(TH.TASK_LOCK_TIMESTAMP) > R.EWM_GO_LIVE_DATE
AND TT_DTL.MASTER_CODE_SYSID = 198
and TT_DTL.DETAIL_CODE= 'PW'
AND datediff(minutes, LOCK_DATETIME, SCANNED_DATETIME)/60 between 0 and 24
AND trim(usr.login_user_name) not in ('AUTOLOC', 'System')
GROUP BY WHSE.ACCOUNT_NUMBER, 
USR.LOGIN_USER_NAME,
TH.TASK_NUMBER_SYSID,
TH.TASK_NUMBER,
TT_DTL.MASTER_CODE_SYSID,
TH.TASK_COMPLETION_TIMESTAMP,
TH.TASK_LOCK_TIMESTAMP,
TT_DTL.DETAIL_CODE,
LOCK_DATETIME,
SCANNED_DATETIME
union
 select WHSE.ACCOUNT_NUMBER AS PLANT_ID,
USR.LOGIN_USER_NAME AS USER,
TH.TASK_NUMBER_SYSID AS TASK_NUMBER_SYSID,
TH.TASK_NUMBER AS TASK_NUMBER,
TT_DTL.DETAIL_CODE,
TT_DTL.MASTER_CODE_SYSID,
extract(MONTH FROM TH.TASK_LOCK_TIMESTAMP) month,
extract(YEAR FROM TH.TASK_LOCK_TIMESTAMP) YEAR,
CASE WHEN TT_DTL.DETAIL_CODE IN ( 'RP' ) AND PT_DTL.PICK_SCANNED_TIMESTAMP IS NOT NULL THEN PT_DTL.PICK_SCANNED_TIMESTAMP ELSE TH.TASK_LOCK_TIMESTAMP END AS LOCK_DATETIME,
CASE WHEN TT_DTL.DETAIL_CODE IN ( 'RP' ) AND PT_DTL.PICK_COMPLETION_TIMESTAMP IS NOT NULL THEN PT_DTL.PICK_COMPLETION_TIMESTAMP ELSE TH.TASK_COMPLETION_TIMESTAMP END AS SCANNED_DATETIME,
sum(datediff(minutes,LOCK_DATETIME, SCANNED_DATETIME))/60 total_hours_emp
from TRANSFORM.EWM_FACT_TASK_HEADER TH
INNER JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE WHSE
ON WHSE.ACCOUNT_SYSID = TH.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_USER_MASTER USR
ON TH.USERID = USR.USERID
LEFT JOIN (SELECT REFERENCE_SYSID FROM TRANSFORM.EWM_DIM_REFERENCE_TABLE WHERE REFERENCE_CODE='TEMP' AND REFERENCE_TYPE_DESCRIPTION='User Type Code') USR_TYPE ON USR.USER_TYPE_SYSID=USR_TYPE.REFERENCE_SYSID
LEFT JOIN TRANSFORM.EWM_FACT_RP_TASK_DETAIL RP_DTL
ON TH.TASK_NUMBER_SYSID = RP_DTL.TASK_NUMBER_SYSID
AND TH.WAREHOUSE_SYSID = RP_DTL.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_FACT_PICK_TASK_DETAIL PT_DTL ON TH.TASK_NUMBER_SYSID = PT_DTL.TASK_NUMBER_SYSID AND TH.WAREHOUSE_SYSID = PT_DTL.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_FACT_PICK_TASK_DETAIL PT_DTL_CUST 
    ON (RP_DTL.PICK_TASK_DETAIL_SYSID = PT_DTL.PICK_TASK_DETAIL_SYSID)
LEFT JOIN TRANSFORM.EWM_FACT_ORDER ODR 
ON PT_DTL_CUST.DELIVERY_TICKET_SYSID = ODR.DELIVERY_TICKET_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE CUST 
    ON ODR.CUSTOMER_SYSID = CUST.ACCOUNT_SYSID 
LEFT JOIN TRANSFORM.EWM_DIM_DETAIL_CODE TT_DTL
ON TH.TASK_TYPE_SYSID = TT_DTL.DETAIL_CODE_SYSID
INNER JOIN TRANSFORM.REF_EWM_GOLIVE R
ON WHSE.ACCOUNT_NUMBER = R.PLANT_ID
where TT_DTL.DETAIL_CODE = 'RP'
and month(th.TASK_LOCK_TIMESTAMP) = RUN_MONTH
and year(th.TASK_LOCK_TIMESTAMP) = RUN_YEAR
AND to_date(TH.TASK_LOCK_TIMESTAMP) > R.EWM_GO_LIVE_DATE
AND datediff(minutes, LOCK_DATETIME, SCANNED_DATETIME)/60 between 0 and 24
AND trim(usr.login_user_name) not in ('AUTOLOC', 'System')
group by WHSE.ACCOUNT_NUMBER,
USR.LOGIN_USER_NAME,
TH.TASK_NUMBER_SYSID,
TH.TASK_NUMBER,
TT_DTL.DETAIL_CODE,
TT_DTL.MASTER_CODE_SYSID,
month, year,
LOCK_DATETIME,
SCANNED_DATETIME
union
select
WHSE.ACCOUNT_NUMBER AS PLANT_ID,
USR.LOGIN_USER_NAME AS USER,
TH.TASK_NUMBER_SYSID AS TASK_NUMBER_SYSID,
TH.TASK_NUMBER AS TASK_NUMBER,
TT_DTL.DETAIL_CODE,
TT_DTL.MASTER_CODE_SYSID,
extract(MONTH FROM TH.TASK_LOCK_TIMESTAMP) month,
extract(YEAR FROM TH.TASK_LOCK_TIMESTAMP) YEAR,
TH.TASK_LOCK_TIMESTAMP LOCK_DATETIME,
TH.TASK_COMPLETION_TIMESTAMP SCANNED_DATETIME,
sum(datediff(minutes,LOCK_DATETIME, SCANNED_DATETIME))/60 total_hours_emp
FROM TRANSFORM.EWM_FACT_TASK_HEADER TH
left join TRANSFORM.EWM_DIM_LOCATION m
on th.warehouse_sysid = m.location_sysid
and (th.to_location_sysid = m.location_sysid)
--or th.from_location = m.location)
INNER JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE WHSE
ON WHSE.ACCOUNT_SYSID = TH.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_DETAIL_CODE TT_DTL
ON TH.TASK_TYPE_SYSID = TT_DTL.DETAIL_CODE_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_USER_MASTER USR
ON TH.USERID = USR.USERID
LEFT JOIN (SELECT REFERENCE_SYSID FROM TRANSFORM.EWM_DIM_REFERENCE_TABLE WHERE REFERENCE_CODE='TEMP' AND REFERENCE_TYPE_DESCRIPTION='User Type Code') USR_TYPE ON USR.USER_TYPE_SYSID=USR_TYPE.REFERENCE_SYSID
LEFT JOIN TRANSFORM.EWM_FACT_MISC_TASK_DETAIL MT
ON TH.TASK_NUMBER_SYSID = MT.TASK_NUMBER_SYSID
AND TH.WAREHOUSE_SYSID = MT.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE CT
ON MT.CUSTOMER_SYSID = CT.ACCOUNT_SYSID
INNER JOIN TRANSFORM.REF_EWM_GOLIVE R
ON WHSE.ACCOUNT_NUMBER = R.PLANT_ID
WHERE month(TH.TASK_LOCK_TIMESTAMP) = RUN_MONTH
and year(TH.TASK_LOCK_TIMESTAMP) = RUN_YEAR
AND to_date(TH.TASK_LOCK_TIMESTAMP) > R.EWM_GO_LIVE_DATE
AND TT_DTL.MASTER_CODE_SYSID = 198
and TT_DTL.DETAIL_CODE= 'BL'
AND datediff(minutes, LOCK_DATETIME, SCANNED_DATETIME)/60 between 0 and 24
AND trim(usr.login_user_name) not in ('AUTOLOC', 'System')
GROUP BY WHSE.ACCOUNT_NUMBER, 
USR.LOGIN_USER_NAME,
TH.TASK_NUMBER_SYSID,
TH.TASK_NUMBER,
TT_DTL.MASTER_CODE_SYSID,
TH.TASK_COMPLETION_TIMESTAMP,
TH.TASK_LOCK_TIMESTAMP,
TT_DTL.DETAIL_CODE,
LOCK_DATETIME,
SCANNED_DATETIME
union
select
WHSE.ACCOUNT_NUMBER AS PLANT_ID,
USR.LOGIN_USER_NAME AS USER,
TH.TASK_NUMBER_SYSID AS TASK_NUMBER_SYSID,
TH.TASK_NUMBER AS TASK_NUMBER,
TT_DTL.DETAIL_CODE,
TT_DTL.MASTER_CODE_SYSID,
extract(MONTH FROM TH.TASK_LOCK_TIMESTAMP) month,
extract(YEAR FROM TH.TASK_LOCK_TIMESTAMP) YEAR,
TH.TASK_LOCK_TIMESTAMP LOCK_DATETIME,
TH.TASK_COMPLETION_TIMESTAMP SCANNED_DATETIME,
sum(datediff(minutes,LOCK_DATETIME, SCANNED_DATETIME))/60 total_hours_emp
FROM TRANSFORM.EWM_FACT_TASK_HEADER TH
INNER JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE WHSE
ON WHSE.ACCOUNT_SYSID = TH.WAREHOUSE_SYSID
left join TRANSFORM.EWM_DIM_DETAIL_CODE TT_DTL
ON TH.TASK_TYPE_SYSID = TT_DTL.DETAIL_CODE_SYSID 
LEFT JOIN TRANSFORM.EWM_DIM_USER_MASTER USR
ON TH.USERID = USR.USERID
LEFT JOIN (SELECT REFERENCE_SYSID FROM TRANSFORM.EWM_DIM_REFERENCE_TABLE WHERE REFERENCE_CODE='TEMP' AND REFERENCE_TYPE_DESCRIPTION='User Type Code') USR_TYPE ON USR.USER_TYPE_SYSID=USR_TYPE.REFERENCE_SYSID
LEFT JOIN TRANSFORM.EWM_FACT_MISC_TASK_DETAIL MT
ON TH.TASK_NUMBER_SYSID = MT.TASK_NUMBER_SYSID
AND TH.WAREHOUSE_SYSID = MT.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE CT
ON MT.CUSTOMER_SYSID = CT.ACCOUNT_SYSID
INNER JOIN TRANSFORM.REF_EWM_GOLIVE R
ON WHSE.ACCOUNT_NUMBER = R.PLANT_ID
WHERE month(TH.TASK_LOCK_TIMESTAMP) = RUN_MONTH
and year(TH.TASK_LOCK_TIMESTAMP) = RUN_YEAR
AND to_date(TH.TASK_LOCK_TIMESTAMP) > R.EWM_GO_LIVE_DATE
AND TT_DTL.MASTER_CODE_SYSID = 198
and TT_DTL.DETAIL_CODE= 'SP'
AND datediff(minutes, LOCK_DATETIME, SCANNED_DATETIME)/60 between 0 and 24
AND trim(usr.login_user_name) not in ('AUTOLOC', 'System')
GROUP BY WHSE.ACCOUNT_NUMBER, 
USR.LOGIN_USER_NAME,
TH.TASK_NUMBER_SYSID,
TH.TASK_NUMBER,
TT_DTL.MASTER_CODE_SYSID,
TH.TASK_COMPLETION_TIMESTAMP,
TH.TASK_LOCK_TIMESTAMP,
TT_DTL.DETAIL_CODE,
LOCK_DATETIME,
SCANNED_DATETIME
), PICK_LINE_TASKS AS (
  select 
PLANT_ID,
USER,
TASK_NUMBER_SYSID, 
TASK_NUMBER,
 month,
YEAR,
  DETAIL_CODE,
 LOCK_DATETIME,
 SCANNED_DATETIME,
 total_hours_emp pick_line_hours_emp
FROM TOTAL_EMPLOYEE_TASK_HOURS 
where 
   month = RUN_MONTH
 and YEAR = RUN_YEAR
AND detail_code in ('BP', 'RO', 'PL') 
and master_code_sysid in (198)
), EMPLOYEE_BREAK_HOUR_INTERSECTION AS (
select plant_id, user, month, year, sum(br_total_time_user) br_total_time_user from (
select bt.plant_id, bt.user, bt.TASK_NUMBER_SYSID, bt.TASK_NUMBER, bt.month, bt.year, bt.DETAIL_CODE,
  ep.lock_datetime,
  ep.scanned_datetime,
  bt.LOCK_DATETIME break_start,
  bt.SCANNED_DATETIME break_end,
  case when bt.LOCK_DATETIME between ep.lock_datetime and ep.SCANNED_DATETIME
and bt.SCANNED_DATETIME between ep.lock_datetime and ep.SCANNED_DATETIME
then 1
else 0
end as break_intersection,
  bt.br_total_time_user
  from EMPLOYEE_BREAK_TASK_HOURS bt
  left join PICK_LINE_TASKS ep
  on bt.plant_id = ep.plant_id
  and bt.user = ep.user
  and bt.month = ep.month
  and bt.year = ep.year
  where bt.detail_code in ('BR', 'LU')
  and ep.month = RUN_MONTH
  and ep.year = RUN_YEAR
  and break_intersection = 1 
  )
  group by plant_id, user, month, year
)
select th.plant_id, th.user, th.month, th.year, 
CASE WHEN (th.total_hours_emp - bh.br_total_time_user) IS NULL
THEN
TH.TOTAL_HOURS_EMP
ELSE (th.total_hours_emp - bh.br_total_time_user) 
END AS TOTAL_HOURS_EMP
from (
select plant_id, user, month, year,
sum(total_hours_emp) total_hours_emp
from TOTAL_EMPLOYEE_TASK_HOURS
group by plant_id, user, month, year
) th
left join (select plant_id, user, month, year,
sum(br_total_time_user) br_total_time_user
from EMPLOYEE_BREAK_HOUR_INTERSECTION 
 group by plant_id, user, month, year) bh
 on th.plant_id = bh.plant_id
and th.user = bh.user
and th.month = bh.month
and th.year = bh.year
;


delete from TRANSFORM.PRFT_USER_CASE_PICK_HOURS_EWM
where year=RUN_YEAR and month=RUN_MONTH;

insert into TRANSFORM.PRFT_USER_CASE_PICK_HOURS_EWM
WITH CUSTOMER_BREAK_TASK_HOURS AS (
select
WHSE.ACCOUNT_NUMBER AS PLANT_ID,
USR.LOGIN_USER_NAME AS USER,
TH.TASK_NUMBER_SYSID AS TASK_NUMBER_SYSID,
TH.TASK_NUMBER AS TASK_NUMBER,
extract(MONTH FROM TH.TASK_LOCK_TIMESTAMP) month,
extract(YEAR FROM TH.TASK_LOCK_TIMESTAMP) YEAR,
TT_DTL.DETAIL_CODE,
TH.TASK_LOCK_TIMESTAMP LOCK_DATETIME,
TH.TASK_COMPLETION_TIMESTAMP SCANNED_DATETIME,
datediff(minutes,LOCK_DATETIME, SCANNED_DATETIME)/60 br_total_time_user
FROM TRANSFORM.EWM_FACT_TASK_HEADER TH
LEFT JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE WHSE
ON WHSE.ACCOUNT_SYSID = TH.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_USER_MASTER USR
ON TH.USERID = USR.USERID
LEFT JOIN TRANSFORM.EWM_FACT_MISC_TASK_DETAIL MCT_DTL ON TH.TASK_NUMBER_SYSID = MCT_DTL.TASK_NUMBER_SYSID AND TH.WAREHOUSE_SYSID = MCT_DTL.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_FACT_ORDER ODR
ON MCT_DTL.DELIVERY_TICKET_SYSID = ODR.DELIVERY_TICKET_SYSID
AND TH.WAREHOUSE_SYSID = ODR.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE CUST
ON ODR.CUSTOMER_SYSID = CUST.ACCOUNT_SYSID
AND MCT_DTL.CUSTOMER_SYSID = CUST.ACCOUNT_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_DETAIL_CODE TT_DTL
ON TH.TASK_TYPE_SYSID = TT_DTL.DETAIL_CODE_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_DETAIL_CODE TS_DTL
ON TH.TASK_STATUS_SYSID = TS_DTL.DETAIL_CODE_SYSID
INNER JOIN TRANSFORM.REF_EWM_GOLIVE R
ON WHSE.ACCOUNT_NUMBER = R.PLANT_ID
WHERE
month(th.task_lock_timestamp) = RUN_MONTH
and year(th.task_lock_timestamp) = RUN_YEAR
AND TT_DTL.DETAIL_CODE in ('BR', 'LU')
AND to_date(TH.TASK_LOCK_TIMESTAMP) > R.EWM_GO_LIVE_DATE
AND datediff(minutes, LOCK_DATETIME, SCANNED_DATETIME)/60 between 0 and 24
AND trim(usr.login_user_name) not in ('AUTOLOC', 'System')
GROUP BY WHSE.ACCOUNT_NUMBER,
USR.LOGIN_USER_NAME,
TH.TASK_NUMBER_SYSID,
TH.TASK_NUMBER,
TH.TASK_COMPLETION_TIMESTAMP,
TH.TASK_LOCK_TIMESTAMP,
TT_DTL.DETAIL_CODE
), DOUBLE_STACK AS (
select plant_id, customer_id, user, task_number, task_lock_timestamp, month, year from (
select WHSE.ACCOUNT_NUMBER AS PLANT_ID, CT.ACCOUNT_NUMBER AS CUSTOMER_ID, COALESCE(TH.USERID, 0) AS USR_ID, USR.LOGIN_USER_NAME AS USER, TH.TASK_NUMBER_SYSID AS TASK_NUMBER_SYSID, TH.TASK_NUMBER AS TASK_NUMBER,
P.PRODUCT_SYSID, 
TT_DTL.DETAIL_CODE,
TT_DTL.MASTER_CODE_SYSID,PT_DTL.PICKED_QUANTITY,P.PALLET_FACTOR, th.task_lock_timestamp,
MONTH(TH.TASK_LOCK_TIMESTAMP) MONTH, YEAR(TH.TASK_LOCK_TIMESTAMP) YEAR, sum(datediff(minutes, TH.TASK_LOCK_TIMESTAMP, TH.TASK_COMPLETION_TIMESTAMP))/60 time_diff 
            from TRANSFORM.EWM_FACT_TASK_HEADER TH
            INNER JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE WHSE
            ON WHSE.ACCOUNT_SYSID = TH.WAREHOUSE_SYSID
            LEFT JOIN TRANSFORM.EWM_DIM_USER_MASTER USR
            ON TH.USERID = USR.USERID
            LEFT JOIN TRANSFORM.EWM_FACT_PICK_TASK_DETAIL PT_DTL
            ON TH.TASK_NUMBER_SYSID = PT_DTL.TASK_NUMBER_SYSID
            AND TH.WAREHOUSE_SYSID = PT_DTL.WAREHOUSE_SYSID
            LEFT JOIN TRANSFORM.EWM_FACT_INVENTORY_PALLET_DETAIL IP
            ON IP.INVENTORY_PALLET_DETAIL_SYSID = PT_DTL.INVENTARY_PALLET_DETAIL_SYSID
            AND IP.WAREHOUSE_SYSID = PT_DTL.WAREHOUSE_SYSID
            LEFT JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE CT
            ON IP.CUSTOMER_SYSID = CT.ACCOUNT_SYSID
            LEFT JOIN TRANSFORM.EWM_DIM_WAREHOUSE_PRODUCT_MASTER P
            on P.WAREHOUSE_SYSID = TH.WAREHOUSE_SYSID
            --and P.PRODUCT_ID = TH.PRODUCT_ID
            LEFT JOIN TRANSFORM.EWM_DIM_DETAIL_CODE TT_DTL
ON TH.TASK_TYPE_SYSID = TT_DTL.DETAIL_CODE_SYSID
INNER JOIN TRANSFORM.REF_EWM_GOLIVE R
ON WHSE.ACCOUNT_NUMBER = R.PLANT_ID
           where month = RUN_MONTH and year = RUN_YEAR and TT_DTL.DETAIL_CODE = 'BP' and MASTER_CODE_SYSID = 198
            and PT_DTL.PICKED_QUANTITY = P.PALLET_FACTOR
            and trim(USR.userid) not in ('AUTOLOC', 'System')
            and datediff(minutes, TH.TASK_LOCK_TIMESTAMP, TH.TASK_COMPLETION_TIMESTAMP)/60 between 0 and 24
           group by WHSE.ACCOUNT_NUMBER, CUSTOMER_ID, USR_ID, USER, TH.TASK_NUMBER_SYSID , TH.TASK_NUMBER,
P.PRODUCT_SYSID, TT_DTL.DETAIL_CODE,TT_DTL.MASTER_CODE_SYSID,PT_DTL.PICKED_QUANTITY,P.PALLET_FACTOR, th.task_lock_timestamp, MONTH, YEAR
  )
  group by plant_id, customer_id, user, task_number, task_lock_timestamp, month, year
having count(*) = 2
 ), TOTAL_CASE_PICK_USER_HOURS AS (
select
WHSE.ACCOUNT_NUMBER AS PLANT_ID,
USR.LOGIN_USER_NAME AS USER,
TH.TASK_NUMBER_SYSID AS TASK_NUMBER_SYSID,
TH.TASK_NUMBER AS TASK_NUMBER,
TT_DTL.DETAIL_CODE,
TT_DTL.MASTER_CODE_SYSID,
extract(MONTH FROM TH.TASK_LOCK_TIMESTAMP) month,
extract(YEAR FROM TH.TASK_LOCK_TIMESTAMP) YEAR,
CASE WHEN TT_DTL.DETAIL_CODE IN ( 'BP', 'BK', 'OP', 'PL' ) AND PT_DTL.PICK_SCANNED_TIMESTAMP IS NOT NULL THEN PT_DTL.PICK_SCANNED_TIMESTAMP ELSE TH.TASK_LOCK_TIMESTAMP END AS LOCK_DATETIME,
CASE WHEN TT_DTL.DETAIL_CODE IN ( 'BP', 'BK', 'OP', 'PL' ) AND PT_DTL.PICK_COMPLETION_TIMESTAMP IS NOT NULL THEN PT_DTL.PICK_COMPLETION_TIMESTAMP ELSE TH.TASK_COMPLETION_TIMESTAMP END AS SCANNED_DATETIME,
sum(datediff(minutes,LOCK_DATETIME, SCANNED_DATETIME))/60 case_pick_hours_emp
FROM TRANSFORM.EWM_FACT_TASK_HEADER TH
INNER JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE WHSE
ON WHSE.ACCOUNT_SYSID = TH.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_USER_MASTER USR
ON TH.USERID = USR.USERID
LEFT JOIN (SELECT REFERENCE_SYSID FROM TRANSFORM.EWM_DIM_REFERENCE_TABLE WHERE REFERENCE_CODE='TEMP' AND REFERENCE_TYPE_DESCRIPTION='User Type Code') USR_TYPE ON USR.USER_TYPE_SYSID=USR_TYPE.REFERENCE_SYSID
LEFT JOIN TRANSFORM.EWM_FACT_PICK_TASK_DETAIL PT_DTL
ON TH.TASK_NUMBER_SYSID = PT_DTL.TASK_NUMBER_SYSID
AND TH.WAREHOUSE_SYSID = PT_DTL.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_FACT_INVENTORY_PALLET_DETAIL IP
ON IP.INVENTORY_PALLET_DETAIL_SYSID = PT_DTL.INVENTARY_PALLET_DETAIL_SYSID
AND IP.WAREHOUSE_SYSID = PT_DTL.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE CT
ON IP.CUSTOMER_SYSID = CT.ACCOUNT_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_DETAIL_CODE TT_DTL
ON TH.TASK_TYPE_SYSID = TT_DTL.DETAIL_CODE_SYSID
INNER JOIN TRANSFORM.REF_EWM_GOLIVE R
ON WHSE.ACCOUNT_NUMBER = R.PLANT_ID
WHERE
month(th.task_lock_timestamp) = RUN_MONTH
and year(th.task_lock_timestamp) = RUN_YEAR
AND to_date(TH.TASK_LOCK_TIMESTAMP) > R.EWM_GO_LIVE_DATE
AND (TT_DTL.MASTER_CODE_SYSID = 198 AND TT_DTL.DETAIL_CODE IN ( 'BP', 'BK', 'PL' )
or (TT_DTL.DETAIL_CODE in ('OP') and TT_DTL.MASTER_CODE_SYSID = 155))
AND datediff(minutes, LOCK_DATETIME, SCANNED_DATETIME)/60 between 0 and 24
AND trim(usr.login_user_name) not in ('AUTOLOC', 'System')
and task_number not in (select task_number from DOUBLE_STACK)
GROUP BY WHSE.ACCOUNT_NUMBER,
USR.LOGIN_USER_NAME,
TH.TASK_NUMBER_SYSID,
TH.TASK_NUMBER,
TH.TASK_COMPLETION_TIMESTAMP,
TH.TASK_LOCK_TIMESTAMP,
PT_DTL.PICK_SCANNED_TIMESTAMP,
PT_DTL.PICK_COMPLETION_TIMESTAMP,
TT_DTL.DETAIL_CODE,
TT_DTL.MASTER_CODE_SYSID
union
select WHSE.ACCOUNT_NUMBER AS PLANT_ID,
USR.LOGIN_USER_NAME AS USER,
TH.TASK_NUMBER_SYSID AS TASK_NUMBER_SYSID,
TH.TASK_NUMBER AS TASK_NUMBER,
TT_DTL.DETAIL_CODE,
TT_DTL.MASTER_CODE_SYSID,
extract(MONTH FROM TH.TASK_LOCK_TIMESTAMP) month,
extract(YEAR FROM TH.TASK_LOCK_TIMESTAMP) YEAR,
CASE WHEN TT_DTL.DETAIL_CODE IN ( 'RP' ) AND PT_DTL.PICK_SCANNED_TIMESTAMP IS NOT NULL THEN PT_DTL.PICK_SCANNED_TIMESTAMP ELSE TH.TASK_LOCK_TIMESTAMP END AS LOCK_DATETIME,
CASE WHEN TT_DTL.DETAIL_CODE IN ( 'RP' ) AND PT_DTL.PICK_COMPLETION_TIMESTAMP IS NOT NULL THEN PT_DTL.PICK_COMPLETION_TIMESTAMP ELSE TH.TASK_COMPLETION_TIMESTAMP END AS SCANNED_DATETIME,
sum(datediff(minutes,LOCK_DATETIME, SCANNED_DATETIME))/60 case_pick_hours_user
from TRANSFORM.EWM_FACT_TASK_HEADER TH
INNER JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE WHSE
ON WHSE.ACCOUNT_SYSID = TH.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_USER_MASTER USR
ON TH.USERID = USR.USERID
LEFT JOIN TRANSFORM.EWM_FACT_RP_TASK_DETAIL RP_DTL
ON TH.TASK_NUMBER_SYSID = RP_DTL.TASK_NUMBER_SYSID
AND TH.WAREHOUSE_SYSID = RP_DTL.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_FACT_PICK_TASK_DETAIL PT_DTL ON TH.TASK_NUMBER_SYSID = PT_DTL.TASK_NUMBER_SYSID AND TH.WAREHOUSE_SYSID = PT_DTL.WAREHOUSE_SYSID
LEFT JOIN TRANSFORM.EWM_FACT_PICK_TASK_DETAIL PT_DTL_CUST
ON (RP_DTL.PICK_TASK_DETAIL_SYSID = PT_DTL.PICK_TASK_DETAIL_SYSID)
LEFT JOIN TRANSFORM.EWM_FACT_ORDER ODR
ON PT_DTL_CUST.DELIVERY_TICKET_SYSID = ODR.DELIVERY_TICKET_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE CUST
ON ODR.CUSTOMER_SYSID = CUST.ACCOUNT_SYSID
LEFT JOIN TRANSFORM.EWM_DIM_DETAIL_CODE TT_DTL
ON TH.TASK_TYPE_SYSID = TT_DTL.DETAIL_CODE_SYSID
INNER JOIN TRANSFORM.REF_EWM_GOLIVE R
ON WHSE.ACCOUNT_NUMBER = R.PLANT_ID
where TT_DTL.DETAIL_CODE = 'RP'
and month(th.TASK_LOCK_TIMESTAMP) = RUN_MONTH
and year(th.TASK_LOCK_TIMESTAMP) = RUN_YEAR
AND datediff(minutes, LOCK_DATETIME, SCANNED_DATETIME)/60 between 0 and 24
AND trim(usr.login_user_name) not in ('AUTOLOC', 'System')
and task_number not in (select task_number from DOUBLE_STACK)
group by WHSE.ACCOUNT_NUMBER,
COALESCE(TH.USERID, 0),
USR.LOGIN_USER_NAME,
TH.TASK_NUMBER_SYSID,
TH.TASK_NUMBER,
TT_DTL.DETAIL_CODE,
TT_DTL.MASTER_CODE_SYSID,
month, year,
LOCK_DATETIME,
SCANNED_DATETIME
), PICK_LINE_TASKS AS (
select
PLANT_ID,
USER,
month,
YEAR,
DETAIL_CODE,
MASTER_CODE_SYSID,
LOCK_DATETIME,
SCANNED_DATETIME,
case_pick_hours_emp pick_line_hours_emp
FROM TOTAL_CASE_PICK_USER_HOURS
where
month = RUN_MONTH
and year = RUN_YEAR
AND detail_code in ('BP', 'RO', 'PL')
and master_code_sysid in (198)
), USER_BREAK_HOUR_INTERSECTION AS (
select plant_id,
user, month, year, sum(br_total_time_user) br_total_time_user from (
select bt.plant_id,
bt.user, bt.TASK_NUMBER_SYSID, bt.TASK_NUMBER, bt.month, bt.year, bt.DETAIL_CODE,
ep.lock_datetime,
ep.scanned_datetime,
bt.LOCK_DATETIME break_start,
bt.SCANNED_DATETIME break_end,
case when bt.LOCK_DATETIME between ep.lock_datetime and ep.SCANNED_DATETIME
and bt.SCANNED_DATETIME between ep.lock_datetime and ep.SCANNED_DATETIME
then 1
else 0
end as break_intersection,
bt.br_total_time_user
from CUSTOMER_BREAK_TASK_HOURS bt
left join PICK_LINE_TASKS ep
on bt.plant_id = ep.plant_id
and bt.user = ep.user
and bt.month = ep.month
and bt.year = ep.year
where bt.detail_code in ('BR', 'LU')
and ep.month = RUN_MONTH
and ep.year = RUN_YEAR
and break_intersection = 1
and task_number not in (select task_number from DOUBLE_STACK)
)
group by plant_id,
user, month, year
)
select th.plant_id, th.user, th.month, th.year,
CASE WHEN (th.case_pick_hours_emp - bh.br_total_time_user) IS NULL
THEN
TH.case_pick_hours_emp
ELSE (th.case_pick_hours_emp - bh.br_total_time_user)
END AS case_pick_hours_emp
from (
select plant_id, user, month, year,
sum(case_pick_hours_emp) case_pick_hours_emp
from TOTAL_CASE_PICK_USER_HOURS
group by plant_id, user, month, year
) th
left join (select plant_id,
user, month, year,
sum(br_total_time_user) br_total_time_user
from USER_BREAK_HOUR_INTERSECTION
group by plant_id,
user, month, year
) bh
on th.plant_id = bh.plant_id
and th.user = bh.user
and th.month = bh.month
and th.year = bh.year
;


delete from TRANSFORM.PRFT_USER_BLAST_FREEZE_HOURS_EWM
where year=RUN_YEAR and month=RUN_MONTH;

insert into TRANSFORM.PRFT_USER_BLAST_FREEZE_HOURS_EWM 
select WHSE.account_number plant_id, usr.login_user_name user, month(th.task_lock_timestamp) month, year(th.task_lock_timestamp) year, sum(datediff(minutes, th.task_lock_timestamp, th.task_completion_timestamp))/60 blast_freeze_hours_user 
  from TRANSFORM.EWM_FACT_TASK_HEADER th
  left join TRANSFORM.EWM_DIM_LOCATION m
  on th.warehouse_sysid = m.location_sysid
  and (th.to_location_sysid = m.location_sysid)
   --or th.from_location = m.location)
  INNER JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE WHSE 
  ON WHSE.ACCOUNT_SYSID = TH.WAREHOUSE_SYSID
  left join TRANSFORM.EWM_DIM_DETAIL_CODE dc
  ON TH.TASK_TYPE_SYSID = dc.DETAIL_CODE_SYSID 
  left join TRANSFORM.EWM_DIM_USER_MASTER usr
  ON TH.USERID = USR.USERID 
  LEFT JOIN (SELECT REFERENCE_SYSID FROM TRANSFORM.EWM_DIM_REFERENCE_TABLE WHERE REFERENCE_CODE='TEMP' AND REFERENCE_TYPE_DESCRIPTION='User Type Code') USR_TYPE ON USR.USER_TYPE_SYSID=USR_TYPE.REFERENCE_SYSID
  LEFT JOIN TRANSFORM.EWM_FACT_MISC_TASK_DETAIL MT
  ON TH.TASK_NUMBER_SYSID = MT.TASK_NUMBER_SYSID
  AND TH.WAREHOUSE_SYSID = MT.WAREHOUSE_SYSID
  LEFT JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE CT
  ON MT.CUSTOMER_SYSID = CT.ACCOUNT_SYSID
  INNER JOIN TRANSFORM.REF_EWM_GOLIVE R
  ON WHSE.ACCOUNT_NUMBER = R.PLANT_ID
  where dc.detail_code = 'BL'
  and year(th.task_lock_timestamp)=RUN_YEAR and month(th.task_lock_timestamp)=RUN_MONTH
  and dc.MASTER_CODE_SYSID = 198
  and to_date(TH.TASK_LOCK_TIMESTAMP) >= R.EWM_GO_LIVE_DATE
  AND trim(usr.login_user_name) not in ('AUTOLOC', 'System')
  AND datediff(minutes, task_lock_timestamp, task_completion_timestamp)/60 between 0 and 24
  group by WHSE.account_number, usr.login_user_name, month, year
  union
   select WHSE.account_number plant_id, usr.login_user_name user, month(th.task_lock_timestamp) month, year(th.task_lock_timestamp) year, sum(datediff(minutes, th.task_lock_timestamp, th.task_completion_timestamp))/60 blast_freeze_hours_user
  from TRANSFORM.EWM_FACT_TASK_HEADER  th
  INNER JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE WHSE 
  ON WHSE.ACCOUNT_SYSID = TH.WAREHOUSE_SYSID
  left join TRANSFORM.EWM_DIM_DETAIL_CODE dc
  ON TH.TASK_TYPE_SYSID = dc.DETAIL_CODE_SYSID 
  left join TRANSFORM.EWM_DIM_USER_MASTER usr
  ON TH.USERID = USR.USERID 
  LEFT JOIN (SELECT REFERENCE_SYSID FROM TRANSFORM.EWM_DIM_REFERENCE_TABLE WHERE REFERENCE_CODE='TEMP' AND REFERENCE_TYPE_DESCRIPTION='User Type Code') USR_TYPE ON USR.USER_TYPE_SYSID=USR_TYPE.REFERENCE_SYSID
  LEFT JOIN TRANSFORM.EWM_FACT_MISC_TASK_DETAIL MT
  ON TH.TASK_NUMBER_SYSID = MT.TASK_NUMBER_SYSID
  AND TH.WAREHOUSE_SYSID = MT.WAREHOUSE_SYSID
  LEFT JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE CT
  ON MT.CUSTOMER_SYSID = CT.ACCOUNT_SYSID
  INNER JOIN TRANSFORM.REF_EWM_GOLIVE R
  ON WHSE.ACCOUNT_NUMBER = R.PLANT_ID
  where dc.detail_code = 'SP'
  and  year(th.task_lock_timestamp)=RUN_YEAR and month(th.task_lock_timestamp)=RUN_MONTH
  and to_date(TH.TASK_LOCK_TIMESTAMP) >= R.EWM_GO_LIVE_DATE
  AND trim(usr.login_user_name) not in ('AUTOLOC', 'System')
  AND datediff(minutes, task_lock_timestamp, task_completion_timestamp)/60 between 0 and 24
  group by WHSE.account_number, usr.login_user_name, month, year
  ;


delete from TRANSFORM.PRFT_USER_HANDLING_HOURS_EWM
where year=RUN_YEAR and month=RUN_MONTH;

insert into TRANSFORM.PRFT_USER_HANDLING_HOURS_EWM 
select plant_id, user, month, year, sum(handling_hours_user) handling_hours_user from (
select eth.plant_id, eth.user, 
   eth.month, eth.year,
 sum((nvl(eth.total_hours_emp,0) - nvl(ecp.case_pick_hours_user,0) - nvl(ebf.blast_freeze_hours_user,0))) handling_hours_user
 from TRANSFORM.PRFT_EMPLOYEE_TOTAL_HOURS_EWM eth
 left join TRANSFORM.PRFT_USER_BLAST_FREEZE_HOURS_EWM ebf
 on eth.plant_id = ebf.plant_id
 and eth.user = ebf.user
 and eth.month = ebf.month
 and eth.year = ebf.year
 left join TRANSFORM.PRFT_USER_CASE_PICK_HOURS_EWM ecp
  on eth.plant_id = ecp.plant_id
 and eth.user = ecp.user
 and eth.month = ecp.month
 and eth.year = ecp.year
group by eth.plant_id,  eth.user,
   eth.month, eth.year
  )
  where year=RUN_YEAR and month=RUN_MONTH
  group by plant_id,user, month, year;


delete from TRANSFORM.PRFT_USER_HOUR_PCT_TOTALS_EWM
where year=RUN_YEAR and month=RUN_MONTH;

insert into TRANSFORM.PRFT_USER_HOUR_PCT_TOTALS_EWM
select tot.plant_id, pct.user, tot.month, tot.year, pct.case_pick_hours_user, pct.blast_freeze_hours_user, pct.handling_hours_user,
tot.total_hours_emp,
iff(tot.total_hours_emp > 0, (pct.case_pick_hours_user/tot.total_hours_emp) * 100, 0) case_pick_user_hours_pct,
iff(tot.total_hours_emp > 0, (pct.blast_freeze_hours_user/tot.total_hours_emp) * 100, 0)  blast_freeze_user_hours_pct,
iff(tot.total_hours_emp > 0, (pct.handling_hours_user/tot.total_hours_emp) * 100, 0) handling_user_hours_pct
from (
 select plant_id, user, month, year, sum(total_hours_emp) total_hours_emp from TRANSFORM.PRFT_EMPLOYEE_TOTAL_HOURS_EWM
    group by plant_id, user, month, year
  ) tot
left join
(
  select plant_id, user, month, year, 
 sum(nvl(case_pick_hours_user,0)) case_pick_hours_user, 
  sum(nvl(blast_freeze_hours_user,0)) blast_freeze_hours_user, 
  sum(nvl(handling_hours_user,0)) handling_hours_user 
  from (
select plant_id, user, month, year, case_pick_hours_user, null as blast_freeze_hours_user, null as handling_hours_user
  from TRANSFORM.PRFT_USER_CASE_PICK_HOURS_EWM
union
  select plant_id, user, month, year, null as case_pick_hours_user, blast_freeze_hours_user, null as handling_hours_user
  from TRANSFORM.PRFT_USER_BLAST_FREEZE_HOURS_EWM
union
 select plant_id, user, month, year, null as case_pick_hours_user, null as blast_freeze_hours_user, handling_hours_user
 from TRANSFORM.PRFT_USER_HANDLING_HOURS_EWM
  ) 
  group by plant_id, user, month, year
  ) pct 
  on tot.plant_id = pct.plant_id
and tot.user = pct.user
and tot.month = pct.month
and tot.year = pct.year
where tot.year=RUN_YEAR and tot.month=RUN_MONTH
;



delete from TRANSFORM.PRFT_EMP_HOUR_WAGE_EWM
where year=RUN_YEAR and month=RUN_MONTH;

insert into TRANSFORM.PRFT_EMP_HOUR_WAGE_EWM 
  select pct.plant_id, pct.user, pct.month, pct.year, w.account, w.subaccount,
nvl(pct.case_pick_hours_user,0) case_pick_hours_user, 
nvl(pct.blast_freeze_hours_user,0) blast_freeze_hours_user,
nvl(pct.handling_hours_user,0) handling_hours_user,
nvl(pct.total_hours_emp,0) total_hours_emp,
(pct.case_pick_user_hours_pct * employee_monthly_wage_amount/100) case_pick_wage_user,
(pct.blast_freeze_user_hours_pct * employee_monthly_wage_amount/100) blast_freeze_wage_user,
(pct.handling_user_hours_pct * employee_monthly_wage_amount/100) handling_wage_user,
nvl(w.employee_monthly_wage_amount,0) employee_monthly_wage_amount
from TRANSFORM.PRFT_USER_HOUR_PCT_TOTALS_EWM pct
left join (
select plant_id, employee_id, user, user_id, month, year, dst_account account, dst_sub_acct subaccount, sum(employee_monthly_wage_amount) employee_monthly_wage_amount from (
select whse.account_number plant_id, w.employee_id, us.login_user_name user, us.userid user_id, month(w.person_end_date) month, year(w.person_end_date) year, dst_account, dst_sub_acct, wage_amount employee_monthly_wage_amount
from TRANSFORM.HR_DIM_WAGES w 
left join TRANSFORM.EWM_DIM_USER_MASTER us
on us.empployee_number = w.employee_id
left join (select distinct warehouse_sysid, userid, month(task_lock_timestamp) month, year(task_lock_timestamp) year from TRANSFORM.EWM_FACT_TASK_HEADER) th
on TH.USERID = US.USERID 
and month = month(w.person_end_date)
and year = year(w.person_end_date)
left JOIN TRANSFORM.EWM_DIM_ACCOUNT_TYPE WHSE 
ON WHSE.ACCOUNT_SYSID = TH.WAREHOUSE_SYSID
and whse.ACCOUNT_NUMBER = w.process_level
  )
  group by plant_id, employee_id, user, user_id, month, year, account, subaccount
) w
on pct.plant_id = w.plant_id
and pct.user = w.user
and pct.month = w.month
and pct.year = w.year
where pct.year=RUN_YEAR and pct.month=RUN_MONTH
and trim(pct.user) not in ('AUTOLOC', 'System');
